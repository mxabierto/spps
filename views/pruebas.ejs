<!DOCTYPE html>
<html lang="es">


<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title><%= title %></title>

    <!-- Bootstrap -->
    <link href="/bower_components/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet">
    <!--<link href="/bower_components/bootstrap/dist/css/bootstrap-theme.min.css" rel="stylesheet">-->
    <link href="/stylesheets/main.css" rel="stylesheet">


    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <!-- load the d3.js library -->
    <script src="https://d3js.org/d3.v4.min.js"></script>

    <style>
        body{
            padding-top: 70px;
        }
        path {
            stroke: steelblue;
            stroke-width: 2;
            fill: none;
        }

        .axis path,
        .axis line {
            fill: none;
            stroke: grey;
            stroke-width: 1;
            shape-rendering: crispEdges;
        }

    </style>

    <link rel="stylesheet" href="/bower_components/font-awesome/css/font-awesome.min.css">
    <link rel="stylesheet" href="http://libs.cartocdn.com/cartodb.js/v3/3.15/themes/css/cartodb.css" />
    <link rel="shortcut icon" href="http://cartodb.com/assets/favicon.ico" />


</head>
<body>

    <% include navbar.ejs %>
    <div class="container-fluid">
        <h1>Recién nacidos con bajo peso</h1>
        <h3>Esta gráfica muestra los valores del indicador a través del tiempo.</h3>

        <div id="lines"></div>
        <script>

            // Set the dimensions of the canvas / graph
            var margin = {top: 30, right: 20, bottom: 30, left: 50},
                width = 600 - margin.left - margin.right,
                height = 270 - margin.top - margin.bottom;

            // Parse the date / time
           var parseDate = d3.timeParse("%Y");

            // Set the ranges
            var x = d3.scaleTime().range([0, width]);
            var y = d3.scaleLinear().range([height, 0]);

            // Define the line
            var priceline = d3.line()
                .x(function(d) { return x(d.date); })
                .y(function(d) { return y(d.price); });

            // Adds the svg canvas
            var svg = d3.select("#lines")
                .append("svg")
                .attr("width", width + margin.left + margin.right)
                .attr("height", height + margin.top + margin.bottom)
                .append("g")
                .attr("transform",
                    "translate(" + margin.left + "," + margin.top + ")");

            // Get the data
            d3.csv('/tiempo159.csv', function(error, data) {
                data.forEach(function(d) {
                    d.date = parseDate(d.date);
                    //esto no iba d.date = +d.date;
                    d.price = +d.price;
                });

                // Scale the range of the data
                x.domain(d3.extent(data, function(d) { return d.date; }));
                y.domain([0, d3.max(data, function(d) { return d.price; })]);

                // Nest the entries by symbol
                var dataNest = d3.nest()
                    .key(function(d) {return d.symbol;})
                    .entries(data);

                // set the colour scale
                var color = d3.scaleOrdinal(d3.schemeCategory10);

                // Loop through each symbol / key
                dataNest.forEach(function(d) {

                    svg.append("path")
                        .attr("class", "line")
                        .style("stroke", function() { // Add the colours dynamically
                            return d.color = color(d.key); })
                        .attr("d", priceline(d.values));

                });

                // Add the X Axis
                svg.append("g")
                    .attr("class", "axis")
                    .attr("transform", "translate(0," + height + ")")
                    .call(d3.axisBottom(x));

                // Add the Y Axis
                svg.append("g")
                    .attr("class", "axis")
                    .call(d3.axisLeft(y));

            });

        </script>

    </div>
    <!-- Hacia abajo hay cosas que pueden ser útiles para experimentar o bien borrarse para siempre -->

    <!-- Estilo del anuncio
     .campaign-banner{
     background-image: url( http://www.gob.mx/cms/uploads/organization/main_image/51/zika_1.jpg);
     background-repeat: no-repeat;
     min-height: 250px;
     background-position: center;
     }-->

     <!--<div class="container-fluid">

         <h1>Anuncio</h1>

         <div class="well">
             <a href="http://www.gob.mx/chikungunya-dengue">
                 <div class="campaign-banner" >-->
                    <!--<span class="pull-right ad-sign">Anuncio</span> -->
    <!-- </div>
 </a>

</div>

</div>-->

    <!--<svg width="100" height="150">
        <rect x="0" width="15" fill="#d1c9b8"></rect>
        <rect x="25" width="15" fill="#d1c9b8"></rect>
        <rect x="50" width="15" fill="#d1c9b8"></rect>
        <rect x="75" width="15" fill="#d1c9b8"></rect>
    </svg>

    <script>
        var ratData = [ 400, 900, 300, 600 ];
        d3.selectAll( "rect" )
            .data( ratData )
            .attr( "height", function(d){
                return d/10 * 1.5;
            })
            .attr( "y", function(d){
                return 150 - d/10 * 1.5;
            });
    </script>

    <p>
        <label for="nHeight"
               style="display: inline-block; width: 240px; text-align: right">
            height = <span id="nHeight-value">…</span>
        </label>
        <input type="range" min="1" max="280" id="nHeight">
    </p>

    <p>
        <label for="nWidth"
               style="display: inline-block; width: 240px; text-align: right">
            width = <span id="nWidth-value">…</span>
        </label>
        <input type="range" min="1" max="400" id="nWidth">
    </p>

    <script src="http://d3js.org/d3.v3.min.js"></script>
    <script>

        var width = 600;
        var height = 300;

        var holder = d3.select("body")
            .append("svg")
            .attr("width", width)
            .attr("height", height);

        // draw a rectangle
        holder.append("rect")
            .attr("x", 300)
            .attr("y", 150)
            .style("fill", "none")
            .style("stroke", "blue")
            .attr("height", 150)
            .attr("width", 200);

        // read a change in the height input
        d3.select("#nHeight").on("input", function() {
            updateHeight(+this.value);
        });

        // read a change in the width input
        d3.select("#nWidth").on("input", function() {
            updateWidth(+this.value);
        });

        // update the values
        updateHeight(150);
        updateWidth(100);

        // Update the height attributes
        function updateHeight(nHeight) {

            // adjust the text on the range slider
            d3.select("#nHeight-value").text(nHeight);
            d3.select("#nHeight").property("value", nHeight);

            // update the rectangle height
            holder.selectAll("rect")
                .attr("y", 150-(nHeight/2))
                .attr("height", nHeight);
        }

        // Update the width attributes
        function updateWidth(nWidth) {

            // adjust the text on the range slider
            d3.select("#nWidth-value").text(nWidth);
            d3.select("#nWidth").property("value", nWidth);

            // update the rectangle width
            holder.selectAll("rect")
                .attr("x", 300-(nWidth/2))
                .attr("width", nWidth);
        }

    </script>-->
</body>
</html>