<!DOCTYPE html>
<html lang="es">


<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title><%= title %></title>

    <!-- Bootstrap -->
    <link href="/bower_components/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet">
    <!--<link href="/bower_components/bootstrap/dist/css/bootstrap-theme.min.css" rel="stylesheet">-->
    <link href="/stylesheets/main.css" rel="stylesheet">


    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script src="//d3js.org/d3.v3.min.js"></script>

    <style>

        body{
            padding-top: 70px;
        }

            .campaign-banner{
            background-image: url( http://www.gob.mx/cms/uploads/organization/main_image/51/zika_1.jpg);
            background-repeat: no-repeat;
            min-height: 250px;
            background-position: center;
        }

    </style>

    <link rel="stylesheet" href="/bower_components/font-awesome/css/font-awesome.min.css">
    <link rel="stylesheet" href="http://libs.cartocdn.com/cartodb.js/v3/3.15/themes/css/cartodb.css" />
    <link rel="shortcut icon" href="http://cartodb.com/assets/favicon.ico" />


</head>
<body>

    <% include navbar.ejs %>
    <div class="container-fluid">
        <h1>Recién nacidos con bajo peso</h1>
        <h3>Esta gráfica muestra la cantidad de recién nacidos con bajo peso por cada entidad federativa. El diámetro de los círculos es proporcional a dicha cantidad.</h3>
        <div id="chart"></div>
        <script>
            var diameter = 500, //max size of the bubbles
                color    = d3.scale.category10(); //color category

            var bubble = d3.layout.pack()
                .sort(null)
                .size([diameter, diameter])
                .padding(1.5);

            var svg = d3.select("#chart")
                .append("svg")
                .attr("width", diameter)
                .attr("height", diameter)
                .attr("class", "bubble");

            d3.csv("num159.csv", function(error, data){

                //convert numerical values from strings to numbers
                data = data.map(function(d){ d.value = +d["valor"]; return d; });

                //bubbles needs very specific format, convert data to this.
                var nodes = bubble.nodes({children:data}).filter(function(d) { return !d.children; });

                //setup the chart
                var bubbles = svg.append("g")
                    .attr("transform", "translate(0,0)")
                    .selectAll(".bubble")
                    .data(nodes)
                    .enter();

                //create the bubbles
                bubbles.append("circle")
                    .attr("r", function(d){ return d.r; })
                    .attr("cx", function(d){ return d.x; })
                    .attr("cy", function(d){ return d.y; })
                    .style("fill", function(d) { return color(d.value); });

                //format the text for each bubble
                bubbles.append("text")
                    .attr("x", function(d){ return d.x; })
                    .attr("y", function(d){ return d.y + 5; })
                    .attr("text-anchor", "middle")
                    .text(function(d){ return d["entidad"]; })
                    .style({
                        "fill":"white",
                        "font-family":"Helvetica Neue, Helvetica, Arial, san-serif",
                        "font-size": "12px"
                    });
            })


        </script>

    </div>



    <!-- Hacia abajo hay cosas que pueden ser útiles para experimentar o bien borrarse para siempre -->
    <!--<div class="container-fluid">

        <h1>Anuncio</h1>

        <div class="well">
            <a href="http://www.gob.mx/chikungunya-dengue">
                <div class="campaign-banner" >-->
                    <!--<span class="pull-right ad-sign">Anuncio</span> -->
    <!-- </div>
 </a>

</div>

</div>-->

    <!--<svg width="100" height="150">
        <rect x="0" width="15" fill="#d1c9b8"></rect>
        <rect x="25" width="15" fill="#d1c9b8"></rect>
        <rect x="50" width="15" fill="#d1c9b8"></rect>
        <rect x="75" width="15" fill="#d1c9b8"></rect>
    </svg>

    <script>
        var ratData = [ 400, 900, 300, 600 ];
        d3.selectAll( "rect" )
            .data( ratData )
            .attr( "height", function(d){
                return d/10 * 1.5;
            })
            .attr( "y", function(d){
                return 150 - d/10 * 1.5;
            });
    </script>

    <p>
        <label for="nHeight"
               style="display: inline-block; width: 240px; text-align: right">
            height = <span id="nHeight-value">…</span>
        </label>
        <input type="range" min="1" max="280" id="nHeight">
    </p>

    <p>
        <label for="nWidth"
               style="display: inline-block; width: 240px; text-align: right">
            width = <span id="nWidth-value">…</span>
        </label>
        <input type="range" min="1" max="400" id="nWidth">
    </p>

    <script src="http://d3js.org/d3.v3.min.js"></script>
    <script>

        var width = 600;
        var height = 300;

        var holder = d3.select("body")
            .append("svg")
            .attr("width", width)
            .attr("height", height);

        // draw a rectangle
        holder.append("rect")
            .attr("x", 300)
            .attr("y", 150)
            .style("fill", "none")
            .style("stroke", "blue")
            .attr("height", 150)
            .attr("width", 200);

        // read a change in the height input
        d3.select("#nHeight").on("input", function() {
            updateHeight(+this.value);
        });

        // read a change in the width input
        d3.select("#nWidth").on("input", function() {
            updateWidth(+this.value);
        });

        // update the values
        updateHeight(150);
        updateWidth(100);

        // Update the height attributes
        function updateHeight(nHeight) {

            // adjust the text on the range slider
            d3.select("#nHeight-value").text(nHeight);
            d3.select("#nHeight").property("value", nHeight);

            // update the rectangle height
            holder.selectAll("rect")
                .attr("y", 150-(nHeight/2))
                .attr("height", nHeight);
        }

        // Update the width attributes
        function updateWidth(nWidth) {

            // adjust the text on the range slider
            d3.select("#nWidth-value").text(nWidth);
            d3.select("#nWidth").property("value", nWidth);

            // update the rectangle width
            holder.selectAll("rect")
                .attr("x", 300-(nWidth/2))
                .attr("width", nWidth);
        }

    </script>-->
</body>
</html>